#!/bin/bash
#
# pomotimer
#   simple countdown timer, flashes screen at conclusion
#
# desc:
#   - sleeps arg1 minutes
#   - prints to stdout each minute
#   - flashes screen when timer expires
#
# deps:
#   - http://smemsh.net/src/ratutils/xflashscreen
#   - http://smemsh.net/src/libsh/
#   - (disabled) tts wrapper (espeak | aplay)
#
# todo:
#   - enable code that calls tts, sound not desired
#   - (disabled) says "done" three times at finish
#   - (disabled) says "start" at start (to verify sound)
#
# stat:
#   - author-specific hack
#   - generalize later if other users
#
# scott@smemsh.net
# http://smemsh.net/src/pomoutils/
# http://spdx.org/licenses/GPL-2.0
#
##############################################################################

source ~/lib/sh/include
require bomb
require setenv
require now

setenv say_done_iters	1
setenv flash_iters	7
setenv flash_sleep	100

# our internal speaker is broken at the moment
# TODO: make this conditional on external speakers or similar
#
setenv playsound	0

speak	()
{
	if ((playsound)); then
		echo "$@" | tts
	else
		((noflash)) && return
		flashscreen $flash_iters $flash_sleep
	fi
}

arg_check ()
{
	if ! (($# == 1)); then
		false; return; fi;

	if [[ $1 =~ [^[:digit:]] ]]; then
		false; return; fi;
}

main ()
{
	arg_check "$@" || bomb

	echo "started `now`"
	noflash=1 speak "start"

	for ((i = $1; i; i--)); do
		printf "%02u\r" $i; sleep 1m; done

	echo "finished `now`"

	for ((i = 0; i < say_done_iters; i++)); do
		sleep 1; speak "finished"; done
}

main "$@"
